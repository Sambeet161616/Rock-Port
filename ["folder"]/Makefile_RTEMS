######################################################################

# Directory where rtems will be installed
PREFIX        = ${INSTALL_PREFIX}/rtems

BIN           = $(PREFIX)/bin
EXPORT_PATH   = export PATH=$(BIN):$(PATH)
TMPDIR_EXTRA  = tmp-
include ${BUILD_PREFIX}/scripts/files/rtems_ver

######################################################################

all: build-binutils \
   build-gcc \
   build-rtems \
   build-gdb

clean: binutils-clean \
     rtems-clean \
     gcc-clean \
     gdb-clean

######################################################################

build-binutils: binutils-configure \
	binutils-compile \
  	binutils-install

build-gcc: gcc-configure \
	gcc-compile \
	gcc-install 

build-gdb: gdb-configure \
	gdb-compile \
	gdb-install

build-rtems: rtems-configure \
	rtems-compile \
  	rtems-install

######################################################################
	
binutils-dir:
	if [ ! -d $(TMPDIR_EXTRA)binutils-$(BINUTILS_VER) ] ; then mkdir $(TMPDIR_EXTRA)binutils-$(BINUTILS_VER); fi

binutils-configure: binutils-dir
	cd $(TMPDIR_EXTRA)binutils-$(BINUTILS_VER); $(EXPORT_PATH); \
	../binutils-$(BINUTILS_VER)/configure \
		--target=$(TARGET) \
		--prefix=$(PREFIX) \
		--enable-languages=c,c++ \
		--verbose  | tee compile-binutils-configure.out

binutils-compile: binutils-dir
	cd $(TMPDIR_EXTRA)binutils-$(BINUTILS_VER); $(EXPORT_PATH); \
	make 2>&1 | tee compile-binutils-make.out

binutils-install: binutils-dir
	cd $(TMPDIR_EXTRA)binutils-$(BINUTILS_VER); $(EXPORT_PATH); \
	make install 2>&1 | tee compile-binutils-install.out

binutils-clean:
	rm -rf $(TMPDIR_EXTRA)binutils-$(BINUTILS_VER)

######################################################################

gcc-configure:
	if [ ! -d $(TMPDIR_EXTRA)gcc-$(GCC_VER) ] ; then mkdir $(TMPDIR_EXTRA)gcc-$(GCC_VER); fi
	cd $(TMPDIR_EXTRA)gcc-$(GCC_VER); $(EXPORT_PATH); \
	../gcc-$(GCC_VER)/configure \
	--target=$(TARGET) \
	--prefix=$(PREFIX) \
	--verbose \
	--enable-languages=c,c++ \
	--enable-dynamic\
	--enable-threads \
	--enable-dlopen \
	--with-newlib \
	--with-gnu-as \
	--with-gnu-ld >&1 | \
	 tee compile-gcc-configure.out

gcc-compile:
	cd $(TMPDIR_EXTRA)gcc-$(GCC_VER); $(EXPORT_PATH); \
	make 2>&1 | tee compile-gcc-make.out

gcc-install:
	cd $(TMPDIR_EXTRA)gcc-$(GCC_VER); $(EXPORT_PATH); \
	make install 2>&1 | tee compile-gcc-install.out

gcc-clean:
	rm -rf $(TMPDIR_EXTRA)gcc-$(GCC_VER)

######################################################################

gdb-dir:
	if [ ! -d $(TMPDIR_EXTRA)gdb-$(GDB_VER) ] ; then mkdir $(TMPDIR_EXTRA)gdb-$(GDB_VER); fi

gdb-configure: gdb-dir
	cd $(TMPDIR_EXTRA)gdb-$(GDB_VER); $(EXPORT_PATH); \
	../gdb-$(GDB_VER)/configure --target=$(TARGET) --prefix=$(PREFIX) 2>&1 | tee compile-gdb-configure.out

gdb-compile: gdb-dir
	cd $(TMPDIR_EXTRA)gdb-$(GDB_VER); $(EXPORT_PATH); \
	make $(EXTRA_FLAGS) 2>&1 | tee compile-gdb-make.out

gdb-install: gdb-dir
	cd $(TMPDIR_EXTRA)gdb-$(GDB_VER); $(EXPORT_PATH);  \
	make $(EXTRA_FLAGS) install 2>&1 | tee compile-gdb-install.out

gdb-clean:
	rm -rf $(TMPDIR_EXTRA)gdb-$(GDB_VER)

######################################################################

rtems-dir:
	if [ ! -d $(TMPDIR_EXTRA)rtems-$(RTEMS_VER) ] ; then mkdir $(TMPDIR_EXTRA)rtems-$(RTEMS_VER); fi

rtems-configure: rtems-dir
	cd $(TMPDIR_EXTRA)rtems-$(RTEMS_VER); $(EXPORT_PATH); \
	../rtems-$(RTEMS_VER)/configure \
	--target=$(TARGET) \
	--prefix=$(PREFIX)  \
	--enable-networking \
	--disable-tests \
	--enable-posix \
	--disable-newlib-supplied-syscalls \
	--enable-rtemsbsp=$(BSP) 2>&1 | tee compile-rtems-configure.out

rtems-compile: rtems-dir
	cd $(TMPDIR_EXTRA)rtems-$(RTEMS_VER); $(EXPORT_PATH); \
	make RTEMS_BSP=$(BSP) 2>&1 | tee compile-rtems-make.out

rtems-install: rtems-dir
	cd $(TMPDIR_EXTRA)rtems-$(RTEMS_VER); $(EXPORT_PATH);  \
	make install RTEMS_BSP=$(BSP) 2>&1 | tee compile-rtems-install.out

rtems-clean:
	rm -rf $(TMPDIR_EXTRA)rtems-$(RTEMS_VER)

######################################################################
